@model List<ImageSharing.Models.EntityInfo.UserAccountInfo>
@using ImageSharing.Models;
@{
    ActionModel action = new ActionModel();
    MessagesModel messages = new MessagesModel();
}
<div id="UsersConsoleContainer">
    @using (Html.BeginForm("ChangeUsers", "AdminHome", FormMethod.Post, new { area = "Admin", enctype = "multipart/form-data" }))
    {
        <table id="AdminConsoleGrid">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>@Html.LabelFor(m => Model[0].Surname)</th>
                    <th>@Html.LabelFor(m => Model[0].Name)</th>
                    <th>@Html.LabelFor(m => Model[0].Email)</th>
                    <th>@Html.LabelFor(m => Model[0].AvatarName)</th>
                    <th>@Html.LabelFor(m => Model[0].Role)</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count(); i++)
                {
                    <tr>
                        <td>
                            <input type="text" value="@Model[i].ID" name="users[@i].ID" readonly="true" /></td>
                        <td>
                            <input type="text" value="@Model[i].Surname" name="users[@i].Surname" /></td>
                        <td>
                            <input type="text" value="@Model[i].Name" name="users[@i].Name" /></td>
                        <td>
                            <input type="text" value="@Model[i].Email" name="users[@i].Email" /></td>
                        <td>
                            <input type="text" value="@Model[i].AvatarName" readonly="true"/><input type="file" name="avatars[@i]" /></td>
                        <td>
                            <input type="text" value="@Model[i].Role" name="users[@i].Role" /></td>
                        <td>
                            <div class="ReferenceContainer">
                                <a href="@Url.Action("DeleteUser", "AdminHome", new { area = "Admin", id = Model[i].ID })">
                                    <div>
                                        @Html.LabelFor(m => action.Delete)
                                    </div>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <br />
        <br />
        <br />
        <div class="ReferenceContainer">
            <a href="javascript:{}" onclick="$('#UsersConsoleContainer>form').submit(); return false;">
                <div>
                    @Html.LabelFor(m => action.Save)
                </div>
            </a>
        </div>
        
        <script type="text/javascript">

            var grid = document.getElementById('AdminConsoleGrid');

            $("#AdminConsoleGrid>thead>tr>th>label").click(function (e) {
                sortGrid($(this.parentElement).index());
            });

            grid.onclick = function (e) {
                if (e.target.tagName != 'TH') return;
                sortGrid(e.target.cellIndex);
            };

            function sortGrid(colNum) {
                var tbody = grid.getElementsByTagName('tbody')[0];

                var rowsArray = [].slice.call(tbody.rows);

                var compare;

                compare = function (rowA, rowB) {
                    return rowA.cells[colNum].innerHTML > rowB.cells[colNum].innerHTML ? 1 : -1;

                }
                rowsArray.sort(compare);

                grid.removeChild(tbody);

                for (var i = 0; i < rowsArray.length; i++) {
                    tbody.appendChild(rowsArray[i]);
                }

                grid.appendChild(tbody);
            }
        </script>
    }
    <div id="AdministrationConsoleAddUserContainer">
        @using (Html.BeginForm("AddUser", "AdminHome", FormMethod.Post, new { area = "Admin", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <table>
                <thead>
                    <tr>

                        <td>@Html.LabelFor(m => Model[0].Surname)</td>
                        <td>@Html.LabelFor(m => Model[0].Name)</td>
                        <td>@Html.LabelFor(m => Model[0].Email)</td>
                        <td>@Html.LabelFor(m => Model[0].Password)</td>
                        <td>@Html.LabelFor(m => Model[0].Role)</td>
                        <td>@Html.LabelFor(m => Model[0].AvatarName)</td>
                    </tr>
                </thead>
                <tr>
                    <td>
                        <input data-val="true" data-val-length="@Html.LabelFor(m => messages.MinLengthMessage).ToString() 3" data-val-length-max="100" data-val-length-min="3" data-val-required="@Html.LabelFor(m => messages.FieldRequiredMessage).ToString()" id="Surname" name="Surname" type="text" value="" class="input-validation-error" /><br />
                        <span class="field-validation-valid" data-valmsg-for="Surname" data-valmsg-replace="true"></span>
                    </td>
                    <td>
                        <input data-val="true" data-val-length="@Html.LabelFor(m => messages.MinLengthMessage).ToString() 3" data-val-length-max="100" data-val-length-min="3" data-val-required="@Html.LabelFor(m => messages.FieldRequiredMessage).ToString()" id="Name" name="Name" type="text" value="" class="input-validation-error" /><br />
                        <span class="field-validation-valid" data-valmsg-for="Name" data-valmsg-replace="true"></span>
                    </td>
                    <td>
                        <input data-val="true" data-val-length="@Html.LabelFor(m => messages.MinLengthMessage).ToString() 4" data-val-length-max="100" data-val-length-min="4" data-val-required="@Html.LabelFor(m => messages.FieldRequiredMessage).ToString()" id="Email" name="Email" type="text" value="" class="input-validation-error" /><br />
                        <span class="field-validation-valid" data-valmsg-for="Email" data-valmsg-replace="true"></span>
                    </td>
                    <td>
                        <input data-val="true" data-val-length="@Html.LabelFor(m => messages.MinLengthMessage).ToString() 6" data-val-length-max="100" data-val-length-min="6" data-val-required="@Html.LabelFor(m => messages.FieldRequiredMessage).ToString()" id="Password" name="Password" type="text" value="" class="input-validation-error" /><br />
                        <span class="field-validation-valid" data-valmsg-for="Password" data-valmsg-replace="true"></span>
                    </td>
                    <td>
                        <input data-val="true" data-val-length="@Html.LabelFor(m => messages.MinLengthMessage).ToString() 4" data-val-length-max="100" data-val-length-min="4" data-val-required="@Html.LabelFor(m => messages.FieldRequiredMessage).ToString()" id="Role" name="Role" type="text" value="" class="input-validation-error" /><br />
                        <span class="field-validation-valid" data-valmsg-for="Role" data-valmsg-replace="true"></span>
                    </td>
                    <td>
                        <input type="file" name="Avatar" /></td>
                    <td>
                        <div class="ReferenceContainer">
                            <a href="javascript:{}" onclick="$('#AdministrationConsoleAddUserContainer>form').submit(); return false;">
                                <div>
                                    @Html.LabelFor(m => action.Add)
                                </div>
                            </a>
                        </div>
                    </td>
                </tr>

            </table>
        }
    </div>
    <script src="~/Scripts/jquery-ui-1.8.24.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
</div>