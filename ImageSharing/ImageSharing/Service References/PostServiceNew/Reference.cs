//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImageSharing.PostServiceNew {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PostServiceNew.IPostServiceNew")]
    public interface IPostServiceNew {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/ChangeImagePath", ReplyAction="http://tempuri.org/IPostServiceNew/ChangeImagePathResponse")]
        void ChangeImagePath(int id, string photoPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/ChangeImagePath", ReplyAction="http://tempuri.org/IPostServiceNew/ChangeImagePathResponse")]
        System.Threading.Tasks.Task ChangeImagePathAsync(int id, string photoPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/ChangeDataTime", ReplyAction="http://tempuri.org/IPostServiceNew/ChangeDataTimeResponse")]
        void ChangeDataTime(int id, System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/ChangeDataTime", ReplyAction="http://tempuri.org/IPostServiceNew/ChangeDataTimeResponse")]
        System.Threading.Tasks.Task ChangeDataTimeAsync(int id, System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/GetPost", ReplyAction="http://tempuri.org/IPostServiceNew/GetPostResponse")]
        ImageSharing.DAL.EntityNew.Post GetPost(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/GetPost", ReplyAction="http://tempuri.org/IPostServiceNew/GetPostResponse")]
        System.Threading.Tasks.Task<ImageSharing.DAL.EntityNew.Post> GetPostAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/GetPosts", ReplyAction="http://tempuri.org/IPostServiceNew/GetPostsResponse")]
        ImageSharing.DAL.EntityNew.Post[] GetPosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/GetPosts", ReplyAction="http://tempuri.org/IPostServiceNew/GetPostsResponse")]
        System.Threading.Tasks.Task<ImageSharing.DAL.EntityNew.Post[]> GetPostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/AddPost", ReplyAction="http://tempuri.org/IPostServiceNew/AddPostResponse")]
        void AddPost(ImageSharing.DAL.EntityNew.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/AddPost", ReplyAction="http://tempuri.org/IPostServiceNew/AddPostResponse")]
        System.Threading.Tasks.Task AddPostAsync(ImageSharing.DAL.EntityNew.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/RemovePost", ReplyAction="http://tempuri.org/IPostServiceNew/RemovePostResponse")]
        void RemovePost(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/RemovePost", ReplyAction="http://tempuri.org/IPostServiceNew/RemovePostResponse")]
        System.Threading.Tasks.Task RemovePostAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/ChangeDescription", ReplyAction="http://tempuri.org/IPostServiceNew/ChangeDescriptionResponse")]
        void ChangeDescription(int id, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostServiceNew/ChangeDescription", ReplyAction="http://tempuri.org/IPostServiceNew/ChangeDescriptionResponse")]
        System.Threading.Tasks.Task ChangeDescriptionAsync(int id, string text);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPostServiceNewChannel : ImageSharing.PostServiceNew.IPostServiceNew, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostServiceNewClient : System.ServiceModel.ClientBase<ImageSharing.PostServiceNew.IPostServiceNew>, ImageSharing.PostServiceNew.IPostServiceNew {
        
        public PostServiceNewClient() {
        }
        
        public PostServiceNewClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PostServiceNewClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostServiceNewClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostServiceNewClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ChangeImagePath(int id, string photoPath) {
            base.Channel.ChangeImagePath(id, photoPath);
        }
        
        public System.Threading.Tasks.Task ChangeImagePathAsync(int id, string photoPath) {
            return base.Channel.ChangeImagePathAsync(id, photoPath);
        }
        
        public void ChangeDataTime(int id, System.DateTime dateTime) {
            base.Channel.ChangeDataTime(id, dateTime);
        }
        
        public System.Threading.Tasks.Task ChangeDataTimeAsync(int id, System.DateTime dateTime) {
            return base.Channel.ChangeDataTimeAsync(id, dateTime);
        }
        
        public ImageSharing.DAL.EntityNew.Post GetPost(int id) {
            return base.Channel.GetPost(id);
        }
        
        public System.Threading.Tasks.Task<ImageSharing.DAL.EntityNew.Post> GetPostAsync(int id) {
            return base.Channel.GetPostAsync(id);
        }
        
        public ImageSharing.DAL.EntityNew.Post[] GetPosts() {
            return base.Channel.GetPosts();
        }
        
        public System.Threading.Tasks.Task<ImageSharing.DAL.EntityNew.Post[]> GetPostsAsync() {
            return base.Channel.GetPostsAsync();
        }
        
        public void AddPost(ImageSharing.DAL.EntityNew.Post post) {
            base.Channel.AddPost(post);
        }
        
        public System.Threading.Tasks.Task AddPostAsync(ImageSharing.DAL.EntityNew.Post post) {
            return base.Channel.AddPostAsync(post);
        }
        
        public void RemovePost(int id) {
            base.Channel.RemovePost(id);
        }
        
        public System.Threading.Tasks.Task RemovePostAsync(int id) {
            return base.Channel.RemovePostAsync(id);
        }
        
        public void ChangeDescription(int id, string text) {
            base.Channel.ChangeDescription(id, text);
        }
        
        public System.Threading.Tasks.Task ChangeDescriptionAsync(int id, string text) {
            return base.Channel.ChangeDescriptionAsync(id, text);
        }
    }
}
