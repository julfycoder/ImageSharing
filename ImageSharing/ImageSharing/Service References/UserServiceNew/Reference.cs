//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImageSharing.UserServiceNew {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServiceNew.IUserServiceNew")]
    public interface IUserServiceNew {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/AddUser", ReplyAction="http://tempuri.org/IUserServiceNew/AddUserResponse")]
        void AddUser(ImageSharing.DAL.EntityNew.UserAccount user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/AddUser", ReplyAction="http://tempuri.org/IUserServiceNew/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(ImageSharing.DAL.EntityNew.UserAccount user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/GetUser", ReplyAction="http://tempuri.org/IUserServiceNew/GetUserResponse")]
        ImageSharing.DAL.EntityNew.UserAccount GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/GetUser", ReplyAction="http://tempuri.org/IUserServiceNew/GetUserResponse")]
        System.Threading.Tasks.Task<ImageSharing.DAL.EntityNew.UserAccount> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/GetUsers", ReplyAction="http://tempuri.org/IUserServiceNew/GetUsersResponse")]
        ImageSharing.DAL.EntityNew.UserAccount[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/GetUsers", ReplyAction="http://tempuri.org/IUserServiceNew/GetUsersResponse")]
        System.Threading.Tasks.Task<ImageSharing.DAL.EntityNew.UserAccount[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/ChangeName", ReplyAction="http://tempuri.org/IUserServiceNew/ChangeNameResponse")]
        void ChangeName(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/ChangeName", ReplyAction="http://tempuri.org/IUserServiceNew/ChangeNameResponse")]
        System.Threading.Tasks.Task ChangeNameAsync(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/ChangeSurname", ReplyAction="http://tempuri.org/IUserServiceNew/ChangeSurnameResponse")]
        void ChangeSurname(int id, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/ChangeSurname", ReplyAction="http://tempuri.org/IUserServiceNew/ChangeSurnameResponse")]
        System.Threading.Tasks.Task ChangeSurnameAsync(int id, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/ChangeEmail", ReplyAction="http://tempuri.org/IUserServiceNew/ChangeEmailResponse")]
        void ChangeEmail(int id, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/ChangeEmail", ReplyAction="http://tempuri.org/IUserServiceNew/ChangeEmailResponse")]
        System.Threading.Tasks.Task ChangeEmailAsync(int id, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/ChangePassword", ReplyAction="http://tempuri.org/IUserServiceNew/ChangePasswordResponse")]
        void ChangePassword(int id, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/ChangePassword", ReplyAction="http://tempuri.org/IUserServiceNew/ChangePasswordResponse")]
        System.Threading.Tasks.Task ChangePasswordAsync(int id, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/ChangeAvatarPath", ReplyAction="http://tempuri.org/IUserServiceNew/ChangeAvatarPathResponse")]
        void ChangeAvatarPath(int id, string avatarPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/ChangeAvatarPath", ReplyAction="http://tempuri.org/IUserServiceNew/ChangeAvatarPathResponse")]
        System.Threading.Tasks.Task ChangeAvatarPathAsync(int id, string avatarPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/RemoveUser", ReplyAction="http://tempuri.org/IUserServiceNew/RemoveUserResponse")]
        void RemoveUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/RemoveUser", ReplyAction="http://tempuri.org/IUserServiceNew/RemoveUserResponse")]
        System.Threading.Tasks.Task RemoveUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/ActivateAccount", ReplyAction="http://tempuri.org/IUserServiceNew/ActivateAccountResponse")]
        void ActivateAccount(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserServiceNew/ActivateAccount", ReplyAction="http://tempuri.org/IUserServiceNew/ActivateAccountResponse")]
        System.Threading.Tasks.Task ActivateAccountAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceNewChannel : ImageSharing.UserServiceNew.IUserServiceNew, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceNewClient : System.ServiceModel.ClientBase<ImageSharing.UserServiceNew.IUserServiceNew>, ImageSharing.UserServiceNew.IUserServiceNew {
        
        public UserServiceNewClient() {
        }
        
        public UserServiceNewClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceNewClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceNewClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceNewClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddUser(ImageSharing.DAL.EntityNew.UserAccount user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(ImageSharing.DAL.EntityNew.UserAccount user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public ImageSharing.DAL.EntityNew.UserAccount GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<ImageSharing.DAL.EntityNew.UserAccount> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public ImageSharing.DAL.EntityNew.UserAccount[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<ImageSharing.DAL.EntityNew.UserAccount[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public void ChangeName(int id, string name) {
            base.Channel.ChangeName(id, name);
        }
        
        public System.Threading.Tasks.Task ChangeNameAsync(int id, string name) {
            return base.Channel.ChangeNameAsync(id, name);
        }
        
        public void ChangeSurname(int id, string surname) {
            base.Channel.ChangeSurname(id, surname);
        }
        
        public System.Threading.Tasks.Task ChangeSurnameAsync(int id, string surname) {
            return base.Channel.ChangeSurnameAsync(id, surname);
        }
        
        public void ChangeEmail(int id, string email) {
            base.Channel.ChangeEmail(id, email);
        }
        
        public System.Threading.Tasks.Task ChangeEmailAsync(int id, string email) {
            return base.Channel.ChangeEmailAsync(id, email);
        }
        
        public void ChangePassword(int id, string password) {
            base.Channel.ChangePassword(id, password);
        }
        
        public System.Threading.Tasks.Task ChangePasswordAsync(int id, string password) {
            return base.Channel.ChangePasswordAsync(id, password);
        }
        
        public void ChangeAvatarPath(int id, string avatarPath) {
            base.Channel.ChangeAvatarPath(id, avatarPath);
        }
        
        public System.Threading.Tasks.Task ChangeAvatarPathAsync(int id, string avatarPath) {
            return base.Channel.ChangeAvatarPathAsync(id, avatarPath);
        }
        
        public void RemoveUser(int id) {
            base.Channel.RemoveUser(id);
        }
        
        public System.Threading.Tasks.Task RemoveUserAsync(int id) {
            return base.Channel.RemoveUserAsync(id);
        }
        
        public void ActivateAccount(int id) {
            base.Channel.ActivateAccount(id);
        }
        
        public System.Threading.Tasks.Task ActivateAccountAsync(int id) {
            return base.Channel.ActivateAccountAsync(id);
        }
    }
}
